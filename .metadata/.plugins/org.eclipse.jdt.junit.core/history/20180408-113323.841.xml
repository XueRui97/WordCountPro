<?xml version="1.0" encoding="UTF-8"?><testrun name="javarestoreTest" project="doc_in" tests="12" started="12" failures="1" errors="0" ignored="0">
  <testsuite name="javarestoreTest" time="0.046">
    <testcase name="testIput" classname="javarestoreTest" time="0.0"/>
    <testcase name="testTraversalDirWithSuffix1" classname="javarestoreTest" time="0.0"/>
    <testcase name="testTraversalDirWithSuffix2" classname="javarestoreTest" time="0.001"/>
    <testcase name="testTraversalDirWithSuffix3" classname="javarestoreTest" time="0.001"/>
    <testcase name="testTraversalDirWithSuffix4" classname="javarestoreTest" time="0.001"/>
    <testcase name="testTraversalDirWithSuffix5" classname="javarestoreTest" time="0.001"/>
    <testcase name="testfileopen" classname="javarestoreTest" time="0.003"/>
    <testcase name="testTraversalDir" classname="javarestoreTest" time="0.027">
      <failure>
        <expected>junittest</expected>
        <actual>output</actual>org.junit.ComparisonFailure: not fit traversal dir filenames expected:&lt;[junittes]t&gt; but was:&lt;[outpu]t&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at javarestoreTest.testTraversalDir(javarestoreTest.java:156)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPrint1" classname="javarestoreTest" time="0.003"/>
    <testcase name="testPrint2" classname="javarestoreTest" time="0.001"/>
    <testcase name="testPrint3" classname="javarestoreTest" time="0.002"/>
    <testcase name="testPrint4" classname="javarestoreTest" time="0.006"/>
  </testsuite>
</testrun>
