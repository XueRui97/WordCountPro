import static org.junit.Assert.*;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;


public class javarestoreTest {

	@Before
	public void setUp() throws Exception {
	}

	@Test
	public void testPrint() {
		String s = "asdf";
		String filename = "output.txt";
		ArrayList<String> as = new ArrayList<String>();
		as.add(s);
		ArrayList<outfile> ao = new ArrayList<outfile>();
		ao.add(new outfile(new File(filename),s));
		javarestore.print(as,ao);
		Assert.assertEquals("output to files but the content of files not match", javarestore.readFileByChars(filename), s);
	}
	@Test
	public void testfileopen() {
		String filename = "output.txt";
		String testcontent = "it's a tricking content test checking if the function is right";
		try {
			javarestore.writeFileByChars(new File(filename), testcontent);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Assert.assertEquals("not fit traversal dir filenames",javarestore.readFileByChars(filename),testcontent);
		
	}
	@Test
	public void testTraversalDirSingle() {
		String filesuffix = "*.cpp";
		String[] filenames = {"asd.cpp"};
		int count=0;
		for(String s:javarestore.TraversalDir(".cpp")) {
			Assert.assertEquals("not fit traversal dir filenames",s,filenames[count]);
			count+=1;
		}
		System.out.println(filenames[count]);
	}
}
